# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x
        
    - name: Install dependencies
      run: dotnet restore
    
    - name: Test with the dotnet CLI
      run: dotnet test EcoState.Test/EcoState.Test.csproj --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Calculate Coverage Percentage
      run: |
        dotnet tool install -g dotnet-reportgenerator

        reportgenerator -reports:./coverage/**/coverage.cobertura.xml -targetdir:./coveragereport

        COVERAGE=$(grep "line-rate" ./coveragereport/index.html | head -n 1 | awk '{print $2}' | awk -F'=' '{print $2}' | awk -F'%' '{print $1}')

        if [[ -z "$COVERAGE" || "$COVERAGE" == "nan" ]]; then
          COVERAGE="0"
        fi
        
        COVERAGE=$(printf "%.2f" "$COVERAGE")
        echo "COVERAGE=$COVERAGE%"
        echo "COVERAGE=$COVERAGE%" >> $GITHUB_ENV
      shell: bash
      
    - name: Create Awesome Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 4a7a6924fbbad82e9ee021b9e5205127
        filename: test.json
        label: Coverage
        message: ${{ env.COVERAGE }}
        color: red
