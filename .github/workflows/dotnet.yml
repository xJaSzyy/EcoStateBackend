# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Install coverlet global tool
        run: dotnet tool install --global coverlet.console

      - name: Test with the dotnet CLI and Coverlet
        run: dotnet test EcoState.Test/EcoState.Test.csproj --collect:"XPlat Code Coverage" --logger:"trx;LogFileName=test_results.trx" --results-directory ./TestResults /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./coverage/coverage.cobertura.xml

      - name: Calculate Coverage Percentage (Coverlet)
        run: |
          # Use Coverlet to generate the coverage summary.
          COVERAGE=$(coverlet ./EcoState.Test/bin/Debug/net7.0/EcoState.Test.dll --target="./EcoState.Test/bin/Debug/net7.0/EcoState.dll" --format=opencover --output=coverage.opencover.xml | grep "Total line coverage:" | awk '{print $4}' | tr -d '%')

          # Check if coverage is empty or invalid.
          if [[ -z "$COVERAGE" || "$COVERAGE" == "nan" ]]; then
            COVERAGE="0"
          fi

          # Format the coverage percentage.
          COVERAGE=$(printf "%.2f" "$COVERAGE")
          echo "COVERAGE=$COVERAGE%"
          echo "COVERAGE=$COVERAGE%" >> $GITHUB_ENV
        shell: bash

      - name: Create Awesome Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 4a7a6924fbbad82e9ee021b9e5205127
          filename: test.json
          label: Coverage
          message: ${{ env.COVERAGE }}
          color: red
